import { NextResponse } from "next/server"
import axios from "axios"

export async function POST(request: Request) {
  try {
    const { access_token, tracks, name, description } = await request.json()

    if (!access_token) {
      return NextResponse.json({ error: "Missing access token" }, { status: 400 })
    }

    if (!tracks || !Array.isArray(tracks) || tracks.length === 0) {
      return NextResponse.json({ error: "No tracks provided" }, { status: 400 })
    }

    // 1. Get user ID
    const userResponse = await axios.get("https://api.spotify.com/v1/me", {
      headers: { Authorization: `Bearer ${access_token}` },
    })
    const userId = userResponse.data.id

    // 2. Create a new playlist
    const playlistResponse = await axios.post(
      `https://api.spotify.com/v1/users/${userId}/playlists`,
      {
        name: name || "My Time Travel Playlist",
        description: description || "Generated by SonicVerse",
        public: true,
      },
      {
        headers: {
          Authorization: `Bearer ${access_token}`,
          "Content-Type": "application/json",
        },
      },
    )
    const playlistId = playlistResponse.data.id

    // 3. Add tracks to the playlist
    const trackUris = tracks.map((trackId: string) => `spotify:track:${trackId}`)

    await axios.post(
      `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,
      {
        uris: trackUris,
      },
      {
        headers: {
          Authorization: `Bearer ${access_token}`,
          "Content-Type": "application/json",
        },
      },
    )

    return NextResponse.json({
      success: true,
      playlist_id: playlistId,
      playlist_url: `https://open.spotify.com/playlist/${playlistId}`,
    })
  } catch (error: any) {
    console.error("Error saving playlist:", error.response?.data || error.message)
    return NextResponse.json(
      {
        error: "Failed to save playlist",
        details: error.response?.data || error.message,
      },
      { status: 500 },
    )
  }
}

